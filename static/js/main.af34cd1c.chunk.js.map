{"version":3,"sources":["utils/Loader.js","home/index.js","utils/ScrollContainer.js","App.js","reportWebVitals.js","index.js"],"names":["LoadContainer","styled","div","Loader","className","size","thickness","color","secondaryColor","speed","React","PureComponent","HomePage","lazy","Home","fallback","ScrollContainer","state","scrollContainer","createRef","this","setState","current","view","style","height","ref","scrollAxis","props","children","Component","defaultProps","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gYAGA,IAAMA,EAAgBC,IAAOC,IAAV,KAQEC,E,uKAEjB,OACE,eAACH,EAAD,CAAeI,UAAU,YAAzB,UACE,sBAAKA,UAAU,qBAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,cAAC,IAAD,CACEC,KAAK,OACLC,UAAW,EACXC,MAAM,UACNC,eAAe,UACfC,MAAO,QAGX,sBAAKL,UAAU,oBAAf,UACE,qBAAKA,UAAU,iCAAf,0BACA,qBAAKA,UAAU,qCAAf,mCAIF,qBAAKA,UAAU,iCAAf,qBAEF,qBAAKA,UAAU,8B,GAtBaM,IAAMC,gB,sNCRpCC,G,MAAWF,IAAMG,MAAK,kBAAM,iCACbC,E,oNAGjB,OACE,8BACE,cAAC,WAAD,CAAUC,SAAU,cAACZ,EAAA,EAAD,IAApB,SACE,cAACS,EAAD,Y,GANwBF,IAAMC,e,yBCAnBK,E,kDAKnB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,gBAAiB,MAEnB,EAAKA,gBAAkBR,IAAMS,YALjB,E,gEASZC,KAAKC,SAAS,CAAEH,gBAAiBE,KAAKF,gBAAgBI,QAAQC,S,+BAI9D,OACE,cAAC,IAAD,CACEC,MAAO,CAAEC,OAAQ,SACjBrB,UAAU,mBACVsB,IAAKN,KAAKF,gBAHZ,SAIE,cAAC,mBAAD,CACEA,gBAAiBE,KAAKH,MAAMC,gBAC5BS,WAAYP,KAAKQ,MAAMD,WAFzB,SAGGP,KAAKQ,MAAMC,iB,GA1BuBnB,IAAMoB,WAA9Bd,EACZe,aAAe,CACpBJ,WAAY,YCcDK,MAhBf,WACE,OACE,qBAAK5B,UAAU,MAAf,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAO6B,KAAK,IAAZ,SACE,cAAC,EAAD,eCCCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.af34cd1c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { SpinnerCircular } from \"spinners-react\";\r\nconst LoadContainer = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  background: #262626;\r\n`;\r\nexport default class Loader extends React.PureComponent {\r\n  render() {\r\n    return (\r\n      <LoadContainer className=\"preloader\">\r\n        <div className=\"preloader__content\">\r\n          <div className=\"preloader__circle\">\r\n            <SpinnerCircular\r\n              size=\"100%\"\r\n              thickness={8}\r\n              color=\"#ffffff\"\r\n              secondaryColor=\"#555555\"\r\n              speed={110}\r\n            />\r\n          </div>\r\n          <div className=\"preloader__header\">\r\n            <div className=\"preloader__heading h2-light h2\">Nitesh Kumar</div>\r\n            <div className=\"preloader__subline small-caps mt-1\">\r\n              Creative Developer\r\n            </div>\r\n          </div>\r\n          <div className=\"preloader__counter h5 h5-light\">&nbsp;</div>\r\n        </div>\r\n        <div className=\"preloader__curtain\"></div>\r\n      </LoadContainer>\r\n    );\r\n  }\r\n}\r\n","import React, { Suspense } from \"react\";\r\nimport Loader from \"../utils/Loader\";\r\nimport \"./index.css\";\r\nconst HomePage = React.lazy(() => import(\"./Home\"));\r\nexport default class Home extends React.PureComponent {\r\n  componentDidMount() {}\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Suspense fallback={<Loader />}>\r\n          <HomePage />\r\n        </Suspense>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { ParallaxProvider } from \"react-scroll-parallax\";\r\nimport Scrollbars from \"react-custom-scrollbars\";\r\n\r\nexport default class ScrollContainer extends React.Component {\r\n  static defaultProps = {\r\n    scrollAxis: \"vertical\",\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      scrollContainer: null,\r\n    };\r\n    this.scrollContainer = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ scrollContainer: this.scrollContainer.current.view });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Scrollbars\r\n        style={{ height: \"100vh\" }}\r\n        className=\"scroll-container\"\r\n        ref={this.scrollContainer}>\r\n        <ParallaxProvider\r\n          scrollContainer={this.state.scrollContainer}\r\n          scrollAxis={this.props.scrollAxis}>\r\n          {this.props.children}\r\n        </ParallaxProvider>\r\n      </Scrollbars>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./home\";\nimport ScrollContainer from \"./utils/ScrollContainer\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <ScrollContainer>\n          <Switch>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </ScrollContainer>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}